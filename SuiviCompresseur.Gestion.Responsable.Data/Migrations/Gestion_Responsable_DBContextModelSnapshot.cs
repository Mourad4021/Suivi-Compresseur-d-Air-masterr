// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuiviCompresseur.Gestion.Responsable.Data.Context;

namespace SuiviCompresseur.Gestion.Responsable.Data.Migrations
{
    [DbContext(typeof(Gestion_Responsable_DBContext))]
    partial class Gestion_Responsable_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuiviCompresseur.Gestion.Responsable.Domain.Models.Filiale", b =>
                {
                    b.Property<Guid>("FilialeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("Nom");

                    b.HasKey("FilialeID");

                    b.ToTable("Filiales");
                });

            modelBuilder.Entity("SuiviCompresseur.Gestion.Responsable.Domain.Models.Utilisateur", b =>
                {
                    b.Property<Guid>("UtilisateurID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date_Ajout");

                    b.Property<Guid>("FilialeID");

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("Mail_Lotus")
                        .IsRequired();

                    b.Property<string>("MotDePasse")
                        .IsRequired();

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<string>("Prenom")
                        .IsRequired();

                    b.HasKey("UtilisateurID");

                    b.HasIndex("FilialeID");

                    b.ToTable("Utilisateurs");
                });

            modelBuilder.Entity("SuiviCompresseur.Gestion.Responsable.Domain.Models.Utilisateur", b =>
                {
                    b.HasOne("SuiviCompresseur.Gestion.Responsable.Domain.Models.Filiale", "Filiale")
                        .WithMany("Utilisateurs")
                        .HasForeignKey("FilialeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
